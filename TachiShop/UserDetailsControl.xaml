<UserControl
    x:Class="TachiShop.UserDetailsControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:infrastructures="clr-namespace:TachiShop.Infrastructures"
    xmlns:local="clr-namespace:TachiShop"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
    xmlns:validationRules="clr-namespace:TachiShop.ValidationRules"
    Background="{DynamicResource MaterialDesignPaper}"
    DataContext="{Binding Source={StaticResource Locator}, Path=UserDetailsViewModel}"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding UnloadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <ResourceDictionary>
            <Style BasedOn="{StaticResource MaterialDesignComboBox}" TargetType="{x:Type ComboBox}">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0,8,0,8" />
            </Style>
            <Style
                x:Key="DetailsButtonStyle"
                BasedOn="{StaticResource MaterialDesignRaisedButton}"
                TargetType="{x:Type Button}">
                <Setter Property="Visibility" Value="Collapsed" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Mode}" Value="2">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style
                x:Key="ReadOnlyTextBoxStyle"
                BasedOn="{StaticResource MaterialDesignTextBox}"
                TargetType="TextBox">
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="Transparent" />
                <Setter Property="Visibility" Value="Collapsed" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Mode}" Value="2">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style
                x:Key="OnlyCreateTextBoxStyle"
                BasedOn="{StaticResource MaterialDesignTextBox}"
                TargetType="TextBox">
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="Transparent" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Mode}" Value="0">
                        <Setter Property="IsReadOnly" Value="False" />
                        <Setter Property="BorderThickness" Value="0,0,0,1" />
                        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style
                x:Key="CustomTextBoxStyle"
                BasedOn="{StaticResource MaterialDesignTextBox}"
                TargetType="TextBox">
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="Transparent" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Mode}" Value="0">
                        <Setter Property="IsReadOnly" Value="False" />
                        <Setter Property="BorderThickness" Value="0,0,0,1" />
                        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Mode}" Value="1">
                        <Setter Property="IsReadOnly" Value="False" />
                        <Setter Property="BorderThickness" Value="0,0,0,1" />
                        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="20,0,20,20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <DockPanel
            Grid.Row="0"
            Grid.Column="0"
            Margin="0,0,0,10">
            <TextBlock DockPanel.Dock="Left" FontWeight="DemiBold">
                <TextBlock.Style>
                    <Style BasedOn="{StaticResource MaterialDesignHeadline4TextBlock}" TargetType="TextBlock">
                        <Setter Property="Text" Value="Thông tin nhân viên" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Mode}" Value="1">
                                <Setter Property="Text" Value="Cập nhật thông tin nhân viên" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Mode}" Value="0">
                                <Setter Property="Text" Value="Tạo mới nhân viên" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <Button
                Width="40"
                Height="40"
                Margin="20,0"
                Padding="0"
                VerticalAlignment="Center"
                Background="ForestGreen"
                BorderBrush="Transparent"
                Command="{Binding OpenChangePasswordDialogCommand}"
                DockPanel.Dock="Right"
                Style="{StaticResource DetailsButtonStyle}"
                ToolTip="Đổi mật khẩu">
                <materialDesign:PackIcon
                    Width="30"
                    Height="30"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="White"
                    Kind="LockReset" />
            </Button>
            <Button
                Width="40"
                Height="40"
                Margin="20,0,0,0"
                Padding="0"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Background="DodgerBlue"
                BorderBrush="Transparent"
                Command="{Binding SwitchToEditCommand}"
                DockPanel.Dock="Right"
                Style="{StaticResource DetailsButtonStyle}"
                ToolTip="Chỉnh sửa thông tin">
                <materialDesign:PackIcon
                    Width="30"
                    Height="30"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="White"
                    Kind="Edit" />
            </Button>
        </DockPanel>
        <Grid Grid.Row="1" Margin="0,80,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="250" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="250" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="20" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="20" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="20" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="20" />
                <RowDefinition Height="*" />
                <RowDefinition Height="20" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="20" />
            </Grid.RowDefinitions>

            <TextBlock
                Grid.Row="0"
                Grid.Column="1"
                Margin="0,10"
                VerticalAlignment="Center"
                FontWeight="DemiBold"
                Text="Tài khoản: " />
            <TextBox
                x:Name="TbUsername"
                Grid.Row="0"
                Grid.Column="3"
                VerticalAlignment="Center"
                materialDesign:HintAssist.Hint="Nhập tên đăng nhập"
                MaxLength="20"
                Style="{StaticResource OnlyCreateTextBoxStyle}">
                <TextBox.Text>
                    <Binding
                        NotifyOnValidationError="True"
                        Path="User.UserName"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validationRules:UsernameValidationRule CheckExist="True" />
                            <!--  Checks for exceptions during the setting of the source property.Alternatively, set ValidatesOnExceptions to True on the Binding.  -->
                            <ExceptionValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBlock
                Grid.Row="0"
                Grid.Column="5"
                Margin="0,10"
                VerticalAlignment="Center"
                FontWeight="DemiBold">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="Ngày tạo: " />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Mode}" Value="0">
                                <Setter Property="Text" Value="Mật khẩu: " />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBox
                Grid.Row="0"
                Grid.Column="7"
                VerticalAlignment="Center"
                materialDesign:TextFieldAssist.UnderlineBrush="Transparent"
                BorderThickness="0"
                IsReadOnly="False"
                Text="{Binding User.CreatedDate, StringFormat=\{0:dd/MM/yyyy HH:mm:ss\}}">
                <TextBox.Resources>
                    <Style BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="TextBox">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Mode}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Resources>
            </TextBox>
            <PasswordBox
                x:Name="PbPassword"
                Grid.Row="0"
                Grid.Column="7"
                VerticalAlignment="Center"
                infrastructures:PasswordHelper.Attach="True"
                materialDesign:HintAssist.Hint="Nhập mật khẩu"
                MaxLength="30">
                <PasswordBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignPasswordBox}" TargetType="PasswordBox">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Mode}" Value="0">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </PasswordBox.Style>
                <infrastructures:PasswordHelper.Password>
                    <Binding
                        Mode="TwoWay"
                        NotifyOnValidationError="True"
                        Path="User.Password"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validationRules:PasswordValidationRule />
                            <!--  Checks for exceptions during the setting of the source property.Alternatively, set ValidatesOnExceptions to True on the Binding.  -->
                            <ExceptionValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </infrastructures:PasswordHelper.Password>
            </PasswordBox>

            <Separator
                Grid.Row="2"
                Grid.Column="1"
                Grid.ColumnSpan="7"
                Margin="0,10,0,20" />

            <TextBlock
                Grid.Row="4"
                Grid.Column="1"
                Margin="0,10"
                VerticalAlignment="Center"
                FontWeight="DemiBold"
                Text="Tên nhân viên: " />
            <TextBox
                x:Name="TbName"
                Grid.Row="4"
                Grid.Column="3"
                VerticalAlignment="Center"
                materialDesign:HintAssist.Hint="Nhập họ và tên nhân viên"
                MaxLength="50"
                Style="{StaticResource CustomTextBoxStyle}">
                <TextBox.Text>
                    <Binding
                        NotifyOnValidationError="True"
                        Path="User.FullName"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validationRules:StringValidationRule RequiredMessage="Vui lòng nhập họ và tên" />
                            <!--  Checks for exceptions during the setting of the source property.Alternatively, set ValidatesOnExceptions to True on the Binding.  -->
                            <ExceptionValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBlock
                Grid.Row="4"
                Grid.Column="5"
                Margin="0,10"
                VerticalAlignment="Center"
                FontWeight="DemiBold"
                Text="Điện thoại: " />
            <TextBox
                x:Name="TbPhoneNumber"
                Grid.Row="4"
                Grid.Column="7"
                VerticalAlignment="Center"
                materialDesign:HintAssist.Hint="Nhập số điện thoại"
                Style="{StaticResource CustomTextBoxStyle}">
                <TextBox.Text>
                    <Binding
                        NotifyOnValidationError="True"
                        Path="User.PhoneNumber"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validationRules:StringValidationRule RequiredMessage="Vui lòng nhập số điện thoại" />
                            <!--  Checks for exceptions during the setting of the source property.Alternatively, set ValidatesOnExceptions to True on the Binding.  -->
                            <ExceptionValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBlock
                Grid.Row="6"
                Grid.Column="1"
                Margin="0,10"
                VerticalAlignment="Center"
                FontWeight="DemiBold"
                Text="Ngày sinh: " />
            <TextBox
                Grid.Row="6"
                Grid.Column="3"
                VerticalAlignment="Center"
                Style="{StaticResource ReadOnlyTextBoxStyle}"
                Text="{Binding User.BirthDate, StringFormat=dd/MM/yyyy}" />
            <DatePicker
                x:Name="DpBirthDate"
                Grid.Row="6"
                Grid.Column="3"
                VerticalAlignment="Center"
                materialDesign:HintAssist.Hint="Chọn ngày sinh"
                DisplayDateEnd="{x:Static sys:DateTime.Now}">
                <DatePicker.Style>
                    <Style BasedOn="{StaticResource MaterialDesignDatePicker}" TargetType="DatePicker">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Mode}" Value="2">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DatePicker.Style>
                <DatePicker.SelectedDate>
                    <Binding
                        NotifyOnValidationError="True"
                        Path="User.BirthDate"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validationRules:DateTimeValidationRule RequiredMessage="Vui lòng chọn ngày sinh" />
                            <ExceptionValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </DatePicker.SelectedDate>
            </DatePicker>

            <TextBlock
                Grid.Row="6"
                Grid.Column="5"
                Margin="0,10"
                VerticalAlignment="Center"
                FontWeight="DemiBold"
                Text="Giới tính: " />
            <TextBox
                Grid.Row="6"
                Grid.Column="7"
                VerticalAlignment="Center"
                Style="{StaticResource ReadOnlyTextBoxStyle}"
                Text="{Binding User.Gender, Converter={StaticResource EnumConverter}, ConverterParameter='GENDER'}" />
            <ComboBox
                x:Name="CbGender"
                Grid.Row="6"
                Grid.Column="7"
                VerticalAlignment="Center"
                materialDesign:HintAssist.Hint="Chọn giới tính"
                DisplayMemberPath="Value"
                ItemsSource="{Binding Genders}"
                SelectedValuePath="Key">
                <ComboBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignComboBox}" TargetType="ComboBox">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Mode}" Value="2">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
                <ComboBox.SelectedValue>
                    <Binding
                        NotifyOnValidationError="True"
                        Path="User.Gender"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validationRules:NotEmptyValidationRule EmptyValue="-1" Message="Vui lòng chọn giới tính" />
                            <!--  Checks for exceptions during the setting of the source property.Alternatively, set ValidatesOnExceptions to True on the Binding.  -->
                            <ExceptionValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.SelectedValue>
            </ComboBox>

            <TextBlock
                Grid.Row="8"
                Grid.Column="1"
                Margin="0,10"
                VerticalAlignment="Top"
                FontWeight="DemiBold"
                Text="Email: " />
            <TextBox
                x:Name="TbEmail"
                Grid.Row="8"
                Grid.Column="3"
                Margin="0,5"
                VerticalAlignment="Top"
                MaxLength="50">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource CustomTextBoxStyle}" TargetType="TextBox">
                        <Setter Property="materialDesign:HintAssist.Hint" Value="Nhập email" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Mode}" Value="2">
                                <Setter Property="materialDesign:HintAssist.Hint" Value="" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding
                        NotifyOnValidationError="True"
                        Path="User.Email"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validationRules:StringValidationRule
                                Regex="^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$"
                                RegexMessage="Email không hợp lệ"
                                Required="False" />
                            <!--  Checks for exceptions during the setting of the source property.Alternatively, set ValidatesOnExceptions to True on the Binding.  -->
                            <ExceptionValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBlock
                Grid.Row="8"
                Grid.Column="5"
                Margin="0,10"
                VerticalAlignment="Top"
                FontWeight="DemiBold"
                Text="Địa chỉ: " />
            <TextBox
                x:Name="TbAddress"
                Grid.Row="8"
                Grid.Column="7"
                Margin="0,5"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="Nhập địa chỉ"
                AcceptsReturn="True"
                MaxLength="255"
                Style="{StaticResource CustomTextBoxStyle}"
                TextWrapping="Wrap">
                <TextBox.Text>
                    <Binding
                        NotifyOnValidationError="True"
                        Path="User.Address"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validationRules:StringValidationRule RequiredMessage="Vui lòng nhập địa chỉ" />
                            <ExceptionValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <Grid
                Grid.Row="10"
                Grid.Column="1"
                Grid.ColumnSpan="7"
                Margin="0,10,0,10"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Button Width="100" Command="{Binding AddEditCommand}">
                    <Button.Resources>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedDarkButton}" TargetType="Button">
                            <Setter Property="Content" Value="Tạo" />
                            <Setter Property="ToolTip" Value="Tạo tài khoản nhân viên" />
                            <Setter Property="Background" Value="Green" />
                            <Setter Property="BorderBrush" Value="Green" />
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Mode}" Value="1">
                                    <Setter Property="Content" Value="Cập nhật" />
                                    <Setter Property="ToolTip" Value="Cập nhật thông tin nhân viên" />
                                    <Setter Property="Background" Value="DodgerBlue" />
                                    <Setter Property="BorderBrush" Value="DodgerBlue" />
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Mode}" Value="2">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Resources>
                </Button>
                <Button
                    Grid.Column="1"
                    Width="100"
                    Command="{Binding CancelEditCommand}"
                    Content="Hủy"
                    ToolTip="Hủy cập nhật">
                    <Button.Resources>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedDarkButton}" TargetType="Button">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Mode}" Value="1">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Resources>
                </Button>
                <Button
                    Grid.Column="2"
                    Width="100"
                    Command="{Binding ClearCommand}"
                    Content="Làm mới"
                    ToolTip="Làm mới thông tin">
                    <Button.Resources>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedDarkButton}" TargetType="Button">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Mode}" Value="2">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Resources>
                </Button>
            </Grid>

        </Grid>
    </Grid>
</UserControl>
