// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TachiShop.Repositories;

namespace TachiShop.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TachiShop.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifyingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatingUserId");

                    b.HasIndex("ModifyingUserId");

                    b.HasIndex("ProductId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("TachiShop.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifyingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatingUserId");

                    b.HasIndex("ModifyingUserId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("TachiShop.Models.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifyingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatingUserId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ModifyingUserId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("TachiShop.Models.InvoiceProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<Guid>("ProductOptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProductOptionId");

                    b.ToTable("InvoiceProduct");
                });

            modelBuilder.Entity("TachiShop.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifyingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatingUserId");

                    b.HasIndex("ModifyingUserId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("TachiShop.Models.ProductCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatingUserId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategory");
                });

            modelBuilder.Entity("TachiShop.Models.ProductOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifyingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("OriginStock")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Stock")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<Guid>("SupplierInvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("SupplyPrice")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModifyingUserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SupplierInvoiceId");

                    b.ToTable("ProductOption");
                });

            modelBuilder.Entity("TachiShop.Models.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifyingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatingUserId");

                    b.HasIndex("ModifyingUserId");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("TachiShop.Models.SupplierInvoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatingUserId");

                    b.HasIndex("SupplierId");

                    b.ToTable("SupplierInvoice");
                });

            modelBuilder.Entity("TachiShop.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifyingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatingUserId");

                    b.HasIndex("ModifyingUserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("TachiShop.Models.Category", b =>
                {
                    b.HasOne("TachiShop.Models.User", "CreatingUser")
                        .WithMany()
                        .HasForeignKey("CreatingUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TachiShop.Models.User", "ModifyingUser")
                        .WithMany()
                        .HasForeignKey("ModifyingUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TachiShop.Models.Product", null)
                        .WithMany("Categories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("TachiShop.Models.Customer", b =>
                {
                    b.HasOne("TachiShop.Models.User", "CreatingUser")
                        .WithMany()
                        .HasForeignKey("CreatingUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TachiShop.Models.User", "ModifyingUser")
                        .WithMany()
                        .HasForeignKey("ModifyingUserId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("TachiShop.Models.Invoice", b =>
                {
                    b.HasOne("TachiShop.Models.User", "CreatingUser")
                        .WithMany()
                        .HasForeignKey("CreatingUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TachiShop.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TachiShop.Models.User", "ModifyingUser")
                        .WithMany()
                        .HasForeignKey("ModifyingUserId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("TachiShop.Models.InvoiceProduct", b =>
                {
                    b.HasOne("TachiShop.Models.Invoice", "Invoice")
                        .WithMany("InvoiceProducts")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TachiShop.Models.ProductOption", "ProductOption")
                        .WithMany()
                        .HasForeignKey("ProductOptionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("TachiShop.Models.Product", b =>
                {
                    b.HasOne("TachiShop.Models.User", "CreatingUser")
                        .WithMany()
                        .HasForeignKey("CreatingUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TachiShop.Models.User", "ModifyingUser")
                        .WithMany()
                        .HasForeignKey("ModifyingUserId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("TachiShop.Models.ProductCategory", b =>
                {
                    b.HasOne("TachiShop.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TachiShop.Models.User", "CreatingUser")
                        .WithMany()
                        .HasForeignKey("CreatingUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TachiShop.Models.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("TachiShop.Models.ProductOption", b =>
                {
                    b.HasOne("TachiShop.Models.User", "ModifyingUser")
                        .WithMany()
                        .HasForeignKey("ModifyingUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TachiShop.Models.Product", "Product")
                        .WithMany("ProductOptions")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TachiShop.Models.SupplierInvoice", "SupplierInvoice")
                        .WithMany("ProductOptions")
                        .HasForeignKey("SupplierInvoiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("TachiShop.Models.Supplier", b =>
                {
                    b.HasOne("TachiShop.Models.User", "CreatingUser")
                        .WithMany()
                        .HasForeignKey("CreatingUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TachiShop.Models.User", "ModifyingUser")
                        .WithMany()
                        .HasForeignKey("ModifyingUserId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("TachiShop.Models.SupplierInvoice", b =>
                {
                    b.HasOne("TachiShop.Models.User", "CreatingUser")
                        .WithMany()
                        .HasForeignKey("CreatingUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TachiShop.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("TachiShop.Models.User", b =>
                {
                    b.HasOne("TachiShop.Models.User", "CreatingUser")
                        .WithMany()
                        .HasForeignKey("CreatingUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TachiShop.Models.User", "ModifyingUser")
                        .WithMany()
                        .HasForeignKey("ModifyingUserId")
                        .OnDelete(DeleteBehavior.NoAction);
                });
#pragma warning restore 612, 618
        }
    }
}
